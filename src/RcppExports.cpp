// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// image_inpaint
List image_inpaint(int patchSizeX, int patchSizeY, int nLevels, bool useFeatures, bool verboseMode);
RcppExport SEXP _imageInpainting_image_inpaint(SEXP patchSizeXSEXP, SEXP patchSizeYSEXP, SEXP nLevelsSEXP, SEXP useFeaturesSEXP, SEXP verboseModeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type patchSizeX(patchSizeXSEXP);
    Rcpp::traits::input_parameter< int >::type patchSizeY(patchSizeYSEXP);
    Rcpp::traits::input_parameter< int >::type nLevels(nLevelsSEXP);
    Rcpp::traits::input_parameter< bool >::type useFeatures(useFeaturesSEXP);
    Rcpp::traits::input_parameter< bool >::type verboseMode(verboseModeSEXP);
    rcpp_result_gen = Rcpp::wrap(image_inpaint(patchSizeX, patchSizeY, nLevels, useFeatures, verboseMode));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_imageInpainting_image_inpaint", (DL_FUNC) &_imageInpainting_image_inpaint, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_imageInpainting(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
